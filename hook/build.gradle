apply plugin: 'com.android.application'

android {
	compileSdkVersion 19
	buildToolsVersion "19.1"

	defaultConfig {
		applicationId "com.example.allhookinone"
		minSdkVersion 9
		targetSdkVersion 19
		versionCode 1
		versionName "1.0"
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

//	sourceSets {
//		main {
//			jniLibs.srcDirs = ['libs']
//		}
//	}
}

Properties properties = new Properties();
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def ndkDir = properties.getProperty("ndk.dir")

task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
	commandLine "$ndkDir/ndk-build",
			'-C', file('src/main/jni').absolutePath,//Change src/main/jni the relative path to your jni source
			'-j', Runtime.runtime.availableProcessors()
}

task cleanNative(type: Exec, description: 'Clean JNI object files') {
	commandLine "$ndkDir/ndk-build",
			'-C', file('src/main/jni').absolutePath,
			'clean'
}

clean.dependsOn 'cleanNative'

tasks.withType(org.gradle.api.tasks.compile.JavaCompile){
	compileTask -> compileTask.dependsOn buildNative
}


dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	testCompile 'junit:junit:4.12'
}
