apply plugin: 'com.android.library'

android {
	compileSdkVersion 23
	buildToolsVersion "23.0.2"

	defaultConfig {
		minSdkVersion 11
		targetSdkVersion 23
		versionCode 1
		versionName "1.0"
		multiDexEnabled true
		useLibrary 'org.apache.http.legacy'
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
//	sourceSets.main {
//		jni.srcDirs = [] // This prevents the auto generation of Android.mk
//		// This tells gradle to include the objects in libs/ which were generated by running our
//		// Android.mk basically by shelling out
//		jniLibs.srcDir 'src/main/libs'
//	}


	sourceSets{
		main{
			jniLibs.srcDirs=['libs']
		}
	}
}
//Properties properties = new Properties();
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//def ndkDir = properties.getProperty("ndk.dir")
//
//task buildNative(type: Exec, description: 'Compile JNI source via NDK') {
//	commandLine "$ndkDir/ndk-build",
//			'-C', file('src/main/jni').absolutePath,//Change src/main/jni the relative path to your jni source
//			'-j', Runtime.runtime.availableProcessors()
//}
//
//task cleanNative(type: Exec, description: 'Clean JNI object files') {
//	commandLine "$ndkDir/ndk-build",
//			'-C', file('src/main/jni').absolutePath,
//			'clean'
//}
//
//clean.dependsOn 'cleanNative'
//
//tasks.withType(org.gradle.api.tasks.compile.JavaCompile){
//	compileTask -> compileTask.dependsOn buildNative
//}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	compile files('libs/ormlite-android-4.41.jar')
	compile files('libs/ormlite-core-4.41.jar')
	compile files('libs/js.jar')
	//compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
	compile ('com.googlecode.json-simple:json-simple:1.1.1'){
		exclude group: 'org.hamcrest',module:'hamcrest-core'
	}
}
